name: 'update-versions-manifest'
description: 'updates current versions manifest with latest deployed version'

inputs:
  manifest-file-path:
    required: true
    description: 'Deployed environment'
  new-versions-map:
    required: true
    description: 'escaped json representing a dictionary of new Versions deployed to a specific environment'
  replace-whole-file:
    default: false
    required: false
    description: 'flag to replaceentire contents of selected file'
  manifest-repo:
    required: true
    description: 'repo of manifest files'
  manifest-repo-ref:
    required: true
    description: 'branch ref for manifests file repo'
  gitemail:
    description: 'git account email'
    required: true
  gitusername:
    required: true
    description: 'git account username'
  ghtoken:
    required: true

runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v3
      with:
        persist-credentials: false
        token: ${{ inputs.ghtoken }}
        repository: ${{ inputs.manifest-repo }}
        ref:  ${{ inputs.manifest-repo-ref }}
        path: manifests
    - name: Update manifest
      if: ${{ inputs.replaceall != 'true' }}
      shell: bash
      working-directory: manifests
      run: |
        echo ${{inputs.newversions}}
        tmpfile=$(mktemp)
        test -f ${{inputs.filename}} || touch ${{inputs.filename}} && echo '{}' > ${{inputs.filename}}
        jq --arg versions ${{ inputs.newversions }} '. * ($versions | fromjson)' ${{inputs.filename}} > $tmpfile && mv $tmpfile ${{inputs.filename}}
    - name: Update manifest
      if: ${{ inputs.replaceall == 'true' }}
      shell: bash
      working-directory: manifests
      run: |
        test -f ${{inputs.filename}} || touch ${{inputs.filename}} && echo '{}' > ${{inputs.filename}}
        echo ${{ fromJSON(inputs.newversions) }} > ${{inputs.filename}}
    - name: Push to repo
      shell: bash
      working-directory: manifests
      run: |
        git remote set-url --push origin https://${{ inputs.gitusername }}:${{ inputs.ghtoken }}@github.com/${{ inputs.manifestrepo }}
        git config user.email "${{ inputs.gitemail }}"
        git config user.name "${{ inputs.gitusername }}"
        git add .
        git commit -m "version manifest update $(date) [skip ci]"
        git push
    - name: cleanup
      shell: bash
      run: |
        rm -rf manifests
