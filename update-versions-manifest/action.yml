name: 'update-versions-manifest'
description: 'updates current versions manifest with latest deployed version'

inputs:
  filename:
    required: true
    description: 'Deployed environment'
  newversions:
    required: true
    description: 'escaped json representing a dictionary of new Versions deployed to a specific environment'
  manifestrepo:
    required: true
    description: 'repo of manifest files'
  manifestreporef:
    required: true
    description: 'branch ref for manifests file repo'
  gitemail:
    description: 'git account email'
    required: true
  gitusername:
    required: true
    description: 'git account username'
  ghtoken:
    required: true
  ghtoken2:
    required: true
  replaceall:
    required: false
    description: 'flag to replaceentire contents of selected file'

runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v3
      with:
        persist-credentials: false
        token: ${{ inputs.ghtoken2 }}
        repository: ${{ inputs.manifestrepo }}
        ref:  ${{ inputs.manifestreporef }}
        path: manifests
    - name: Update manifest
      if: ${{ inputs.replaceall != 'true' }}
      shell: bash
      working-directory: manifests
      run: |
        tmpfile=$(mktemp)
        echo "yo"
        ls
        echo "yoyo"
        ls manifests
        echo "yoyoyo"
        jq --arg versions "${{ inputs.newversions }}" '. * ($versions | fromjson)' ${{inputs.filename}} > $tmpfile && mv $tmpfile ${{inputs.filename}}
    - name: Update manifest
      if: ${{ inputs.replaceall == 'true' }}
      shell: bash
      working-directory: manifests
      run: |
        echo ${{ fromJSON(inputs.newversions) }} > ${{inputs.filename}}
    - name: Push to repo
      shell: bash
      working-directory: manifests
      run: |
        git add .
        git commit -m "version manifest update $(date) [skip ci]"
        git push

