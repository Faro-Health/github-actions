name: 'update-versions-manifest'
description: 'updates current versions manifest with latest deployed version'

inputs:
  filename:
    required: true
    description: 'Deployed environment'
  newversions:
    required: true
    description: 'escaped json representing a dictionary of new Versions deployed to a specific environment'
  manifestrepo:
    required: true
    description: 'repo of manifest files'
  manifestreporef:
    required: true
    description: 'branch ref for manifests file repo'
  gitemail:
    description: 'git account email'
    required: true
  gitusername:
    required: true
    description: 'git account username'
  replaceall:
    required: false
    description: 'flag to replaceentire contents of selected file'

runs:
  using: "composite"
  steps:
    - name: Set default git identity.
      run: |
        mkdir manifests
        cd manifests
        git config --global user.email "${{ inputs.gitemail }}"
        git config --global user.name "${{ inputs.gitusername }}"
    - uses: actions/checkout@v3
      with:
        name: ${{ inputs.manifestrepo }}
        ref:  ${{ inputs.manifestreporef }}
    - name: Update manifest
      if: ${{ inputs.replaceall != 'true' }}
      run: |
        jq --arg versions ${{ inputs.newversions }} '. * ($versions | fromjson)' ${{inpts.filename}} > ${{inpts.filename}}.tmp && mv ${{inpts.filename}}.tmp ${{inpts.filename}}
    - name: Update manifest
      if: ${{ inputs.replaceall == 'true' }}
      run: |
        echo ${{ inputs.newversions | fromjson }} > ${{inpts.filename}}
    - name: Push to repo
      run: |
        git add .
        git commit -m "version manifest update $(date) [skip ci]"
        git push
    - name: Cleanup
      run: |
        cd ../
        rm -rf ./manifests

